package com.luv2code.springdemo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

//import com.luv2code.springdemo.dao.StudentDAO;
import com.luv2code.springdemo.entity.Student;
import com.luv2code.springdemo.service.StudentService;

@Controller
@RequestMapping("/Student")
public class StudentController {
	//need to inject the Student dao
	@Autowired
	private StudentService StudentService;
	
	
	@GetMapping("/list")
	public String listStudents(Model theModel)
	{
		//get Students from the dao using services
		List<Student> theStudents=StudentService.getStudents();		
		//add the Students from the dao using services
		theModel.addAttribute("Students",theStudents);
		return "list-Students";
	}
	// this function just to show the form 
@GetMapping("/showFormForAdd")
public String showFormForAdd(Model theModel )
{
	//create model attribute to bind form data
	Student theStudent=new Student(); 
	theModel.addAttribute("Student",theStudent);
	return "Student-form"; 
	}

//this function 
@PostMapping("/saveStudent")
public String saveStudent(@ModelAttribute("Student") Student theStudent)
{
	//save the Student using our service
	StudentService.saveStudent(theStudent);
	return "redirect:/Student/list";
}

@GetMapping("/showFormForUpdate")
public String showFormForUpdate(@RequestParam("StudentId") int theId,Model theModel)
{
	//get the Student from the database
	Student theStudent = StudentService.getStudent(theId);
	//set Student as a model attribute to pre-populate the form
	theModel.addAttribute("Student",theStudent);
	//send over to our form
	return "Student-form";
}

@GetMapping("/delete")
public String deleteStudent(@RequestParam("StudentId") int theId)
{
	//delete the Student
	StudentService.deleteStudent(theId);
	
	return "redirect:/Student/list";
	}
}
