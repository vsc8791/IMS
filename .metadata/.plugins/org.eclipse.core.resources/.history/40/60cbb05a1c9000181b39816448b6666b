package com.luv2code.springdemo.dao;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.query.Query;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import com.luv2code.springdemo.entity.Student;

@Repository
public class StudentDAOImpl implements StudentDAO {

	//need to inject the session Factory
	@Autowired
	public SessionFactory sessionFactory;
	
	@Override
	public List<Student> getStudents() {
		//get the current hibernate session
		Session currentSession=sessionFactory.getCurrentSession();
		// create Query
		Query<Student> theQuery=
				currentSession.createQuery("from student", Student.class);
		//execute the query and get the result
	List<Student> students=theQuery.getResultList();		
		// return the results		
		return students;
	}
	

	@Override
	public void saveStudent(Student theStudent) {
		//get current hibernate session
		
				Session currentSession = sessionFactory.getCurrentSession();
				
				//save the customer .. finally LOL
				currentSession.saveOrUpdate(theStudent);

	}

	@Override
	public Student getStudent(int theId) {
		//get the current hibernate session
		
				Session currentSession = sessionFactory.getCurrentSession();
				
				//now retrieve/read from database using the primary key
                Student theStudent = currentSession.get(Student.class, theId);
				
				 
				return theStudent;

	}

	@Override
	public void deleteStudent(int theId) {
		//get the current session of hibernate
				Session currentSession = sessionFactory.getCurrentSession();
				//delete the object with primary key
				
				@SuppressWarnings("rawtypes")
				Query theQuery=currentSession.createQuery("delete from student where id=:studentId");
				theQuery.setParameter("studentId", theId);
				
				theQuery.executeUpdate();

	}

}
